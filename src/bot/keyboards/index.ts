import { InlineKeyboard } from 'grammy';
import type { Game } from '../../models/types';

/**
 * –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
 */
export function createMainMenuKeyboard(): InlineKeyboard {
  return new InlineKeyboard()
    .text('üéæ –ó–∞–ø–ª–∞–Ω—É–≤–∞—Ç–∏ –≥—Ä—É', 'schedule_game')
    .text('üìä –î–æ–¥–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç', 'add_result').row()
    .text('üìà –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'my_stats')
    .text('üèÜ –†–µ–π—Ç–∏–Ω–≥', 'rankings');
}

/**
 * –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–æ—é –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
 */
export function createBackToMenuKeyboard(): InlineKeyboard {
  return new InlineKeyboard().text('üîô –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é', 'main_menu');
}

/**
 * –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –≤–∏–±–æ—Ä—É –≥—Ä–∏ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
 */
export function createSelectGameKeyboard(games: Game[], userId: number): InlineKeyboard {
  const keyboard = new InlineKeyboard();
  
  for (const game of games) {
    const opponent = game.player1Id === userId ? game.player2Username : game.player1Username;
    const date = new Date(game.scheduledTime).toLocaleDateString();
    keyboard.text(`üéÆ ${opponent} - ${date}`, `game_select:${game._id}`).row();
  }
  
  keyboard.text('üîô –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é', 'main_menu');
  
  return keyboard;
}

/**
 * –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –≤–∏–±–æ—Ä—É –ø–µ—Ä–µ–º–æ–∂—Ü—è
 */
export function createSelectWinnerKeyboard(game: Game): InlineKeyboard {
  return new InlineKeyboard()
    .text(`ü•á ${game.player1Username} –ø–µ—Ä–µ–º—ñ–≥`, `winner_select:${game.player1Id}`).row()
    .text(`ü•á ${game.player2Username} –ø–µ—Ä–µ–º—ñ–≥`, `winner_select:${game.player2Id}`).row()
    .text('‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏', 'main_menu');
}